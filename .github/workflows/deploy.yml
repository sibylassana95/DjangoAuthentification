name: Deploy to PythonAnywhere

on:
  push:
    branches:
      - main  # Déploiement automatique uniquement sur la branche principale

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Étape 1 : Cloner le code
    - name: Checkout code
      uses: actions/checkout@v3

    # Étape 2 : Configurer Python et installer les dépendances
    - name: Set up Python environment
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    # Étape 3 : Déployer avec l'API PythonAnywhere
    - name: Deploy using PythonAnywhere API
      env:
        PA_USERNAME: ${{ secrets.PA_USERNAME }}
        PA_API_TOKEN: ${{ secrets.PA_API_TOKEN }}
      run: |
        echo "Début du déploiement via l'API PythonAnywhere..."

        # 1. Mettre à jour les fichiers nécessaires (requirements.txt, settings.py, et fichiers dans templates)
        echo "Mise à jour des fichiers..."
        
        # Mise à jour de requirements.txt
        curl -X POST \
          -H "Authorization: Token ${PA_API_TOKEN}" \
          -F "content=@requirements.txt" \
          https://www.pythonanywhere.com/api/v0/user/${PA_USERNAME}/files/path/home/${PA_USERNAME}/DjangoAuthentification/requirements.txt
        
        # Mise à jour des fichiers dans AuthenticationProject
        echo "Mise à jour des fichiers dans le dossier AuthenticationProject..."
        for file in $(find AuthenticationProject/ -type f); do
          curl -X POST \
            -H "Authorization: Token ${PA_API_TOKEN}" \
            -F "content=@$file" \
            https://www.pythonanywhere.com/api/v0/user/${PA_USERNAME}/files/path/home/${PA_USERNAME}/DjangoAuthentification/AuthenticationProject/$(basename $file)
        done

        # Mise à jour des fichiers dans templates
        echo "Mise à jour des fichiers dans le dossier templates..."
        for file in $(find templates/ -type f); do
          curl -X POST \
            -H "Authorization: Token ${PA_API_TOKEN}" \
            -F "content=@$file" \
            https://www.pythonanywhere.com/api/v0/user/${PA_USERNAME}/files/path/home/${PA_USERNAME}/DjangoAuthentification/templates/$(basename $file)
        done

        # Mise à jour des fichiers dans accounts
        echo "Mise à jour des fichiers dans le dossier accounts..."
        for file in $(find accounts/ -type f); do
          curl -X POST \
            -H "Authorization: Token ${PA_API_TOKEN}" \
            -F "content=@$file" \
            https://www.pythonanywhere.com/api/v0/user/${PA_USERNAME}/files/path/home/${PA_USERNAME}/DjangoAuthentification/accounts/$(basename $file)
        done

        # 2. Exécuter des commandes dans la console existante
        echo "Exécution des commandes Django dans la console existante..."

        # ID de la console existante
        CONSOLE_ID="37411334"

        # Exécution des commandes Django dans la console existante
        curl -X POST \
          -H "Authorization: Token ${PA_API_TOKEN}" \
          -d "command=workon venv && cd /home/${PA_USERNAME}/DjangoAuthentification && python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic --noinput" \
          https://www.pythonanywhere.com/api/v0/user/${PA_USERNAME}/consoles/${CONSOLE_ID}/send/

        # 3. Redémarrer l'application web
        echo "Redémarrage de l'application web..."
        curl -X POST \
          -H "Authorization: Token ${PA_API_TOKEN}" \
          https://www.pythonanywhere.com/api/v0/user/${PA_USERNAME}/webapps/${PA_USERNAME}.pythonanywhere.com/reload/

        echo "Déploiement terminé avec succès !"
